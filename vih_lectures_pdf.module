<?php
/**
 * @file
 * Code for the PDF for the lectures
 */

/**
 * Implements hook_libraries_info();
 */
function vih_lectures_pdf_libraries_info() {
  $libraries['tcpdf'] = array(
    'name' => 'TCPDF',
    'vendor url' => 'http://www.tcpdf.org/',
    'download url' => 'http://sourceforge.net/projects/tcpdf/files/',
    'version arguments' => array(
      'file' => 'tcpdf.php',
      'pattern' => '/\Version     : ((\d+)\.(\d+)\.(\d+))/',
    ),
    'files' => array(
      'php' => array(
        'tcpdf.php',
      ),
    ),
    // Optional: Register files to auto-load for your module. All files must be
    // keyed by module, and follow the syntax of the 'files' property.
    'integration files' => array(
      'vih_lectures_pdf' => array(
        'php' => array('tcpdf.php'),
      ),
    ),
  );
  return $libraries;
}

/**
 * Implements hook_menu().
 */
function vih_lectures_pdf_menu() {
  $items = array();
  $items['node/%node/pdf'] = array(
    'title' => 'PDF',
    'page callback' => 'vih_lectures_pdf_booklet',
    'page arguments' => array(1),
    'access callback' => 'vih_lectures_pdf_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_ACTION,
  );
  $items['node/%node/poster'] = array(
    'title' => 'Plakat',
    'page callback' => 'vih_lectures_pdf_poster',
    'page arguments' => array(1),
    'access callback' => 'vih_lectures_pdf_poster_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_ACTION,
  );
  $items['admin/config/vih/lectures'] = array(
    'title' => 'Lectures',
    'description' => 'Settings for printout of the lectures',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('vih_lectures_pdf_admin_settings'),
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Access check for a pdf for lectures.
 */
function vih_lectures_pdf_access($node) {
  if ($node->type == 'vih_lectures' OR $node->type == 'vih_lecture') {
    return TRUE;
  }
  return FALSE;
}

/**
 * Access check for for the posters.
 */
function vih_lectures_pdf_poster_access($node) {
  if ($node->type == 'vih_lectures') {
    return TRUE;
  }
  return FALSE;
}

/**
 * Plugin for the PDF printouts.
 *
 * Implements hook_ctools_plugin_type().
 *
 * Has plenty options. See ctools/help/plugins-creating.html
 */
function vih_lectures_pdf_ctools_plugin_type() {
  $plugins['layouts'] = array(
    'use hooks' => TRUE,
  );
  return $plugins;
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function vih_lectures_pdf_ctools_plugin_directory($owner, $plugin) {
  if (($owner == 'vih_lectures_pdf') && ($plugin == 'layouts')) {
    return 'plugins/' . $plugin;
  }
}

/**
 * Fetch metadata on a specific layout plugin.
 *
 * @param string $layout
 *   Name of a panel layout. If the layout name contains a ':' this
 *   indicates that we need to separate the sublayout out and
 *   load it individually.
 *
 * @return array
 *   An array with information about the requested panel layout.
 */
function vih_lectures_pdf_get_layout($layout) {
  ctools_include('plugins');
  return ctools_get_plugins('vih_lectures_pdf', 'layouts', $layout);
}

/**
 * Fetch metadata for all layout plugins.
 * 
 * @param
 *   string $id Optional plugin ID
 *
 * @return array
 *   An array of arrays with information about all available layouts.
 */
function vih_lectures_pdf_get_layouts($id = NULL) {
  ctools_include('plugins');
  return ctools_get_plugins('vih_lectures_pdf', 'layouts', $id);
}

/**
 * Returns pdf layouts plugin.
 */
function vih_lectures_pdf_layouts() {
  return variable_get('vih_lectures_pdf_layout', 'landscape');
}

/**
 * Implements hook_admin_settings().
 */
function vih_lectures_pdf_admin_settings() {
  global $base_url;
  $options = array();
  foreach (vih_lectures_pdf_get_layouts() as $key => $layout) {
    $options[$key] = $key;
  }
  
  $form = array();

  $form['vih_lectures_pdf']['layout'] = array(
    '#type' => 'select',
    '#title' => t('Layout'),
    '#default_value' => variable_get('vih_lectures_pdf_layout', 'portrait'),
    '#options' => $options,
    '#description' => t("Which layout do you wish to use?"),
    '#required' => TRUE,
  );

  // Use the #managed_file FAPI element to upload an image file.
  $form['vih_lectures_pdf']['logo'] = array(
    '#title' => t('Logo'),
    '#type' => 'managed_file',
    '#description' => t('The uploaded image will be displayed on this page using the image style choosen below.'),
    '#default_value' => variable_get('vih_lectures_pdf_logo', ''),
    '#upload_location' => 'public://logo/',
  );

  $form['vih_lectures_pdf']['link'] = array(
    '#type' => 'textfield',
    '#title' => t('Link'),
    '#default_value' => variable_get('vih_lectures_pdf_link', $base_url),
    '#description' => t("Link to use for the logo"),
    '#required' => TRUE,
  );

  $form['#submit'][] = 'vih_lectures_pdf_admin_settings_submit';
  return system_settings_form($form);
}

/**
 * Implements hook_admin_settings_validate().
 */
function vih_lectures_pdf_admin_settings_validate($form, &$form_state) {
  return TRUE;
}

/**
 * Implements hook_admin_settings_submit().
 */
function vih_lectures_pdf_admin_settings_submit($form, &$form_state) {
  variable_set('vih_lectures_pdf_layout', $form_state['values']['layout']);
  variable_set('vih_lectures_pdf_link', $form_state['values']['link']);

  // @see http://drupal.org/node/1090198.
  global $user;
  if (is_numeric($form_state['values']['logo']) && $form_state['values']['logo'] > 0) {
    // Load the file via file.fid.
    $file = file_load($form_state['values']['logo']);
    if ($file) {
      // Change status to permanent.
      $file->status = FILE_STATUS_PERMANENT;
      // Save.
      file_save($file);
      // Save file to variable.
      variable_set('vih_lectures_pdf_logo', $file->fid);
      // Record that the module (in this example, user module) is using the file. 
      file_usage_add($file, 'vih_lectures_pdf', 'user', $user->uid);
      // Unset formstate value - make sure it is unset before system submit
      unset($form_state['values']['logo']);
    }
  }
  else {
    // Load the file via file.fid.
    $file = file_load(variable_get('vih_lectures_pdf_logo', ''));
    
    if ($file->fid) {
      // Delete the file and the usage record
      file_delete($file, TRUE);
    }

    variable_set('vih_lectures_pdf_logo', '');
  }  
}

/**
 * Creates a booklet for a lecture or lectures.
 */
function vih_lectures_pdf_booklet($lecture) {
  if (!($library = libraries_load('tcpdf')) && empty($library['loaded'])) {
     die('TCPDF library is not loaded');
  }

  global $base_url;
  $events = array();
  $layout = variable_get('vih_lectures_pdf_layout', 'portrait');
  ctools_include('Layout', 'vih_lectures_pdf', 'plugins/layouts/' . $layout);

  $class = 'VIH_Lectures_Pdf_' . ucfirst($layout);

  if ($lecture->type == 'vih_lectures') {
    foreach ($lecture->field_lectures['und'] as $key => $value) {
      $node = node_load($value['target_id']);
      if ($node) {
        $events[] = $node;
      }
    }
  } 
  else {
    $events[] = $lecture;
  } 
  $pdf = new $class($events);
  $pdf->setBaseUrl($base_url);
  $pdf->setHeading($lecture->title);
  $pdf->setAuthor(variable_get('site_name', "Vejle Idrætshøjskole"));
  if ($logo = file_load(variable_get('vih_lectures_pdf_logo', ''))) {
    $pdf->setLogo(drupal_realpath($logo->uri));
  }
  if ($lecture->type == 'vih_lectures') {
    $pdf->setSubTitle($lecture->field_subtitle['und'][0]['safe_value']);
    $pdf->setDescription($lecture->body['da'][0]['safe_value']);
    $file = drupal_realpath($lecture->field_picture['da'][0]['uri']);
    $pdf->addFrontpage($file);
    $pdf->addSecondPage($file);
  }
  $pdf->render();
  drupal_exit();
}

/**
 * Creates a poster for lectures.
 */
function vih_lectures_pdf_poster($lecture) {
  if (!($library = libraries_load('tcpdf')) && empty($library['loaded'])) {
     die('TCPDF library is not loaded');
  }
  global $base_url;
  $events = array();
  $layout = variable_get('vih_lectures_pdf_poster_layout', 'portrait_a3');
  ctools_include('Layout', 'vih_lectures_pdf', 'plugins/posters/' . $layout);

  $class = 'VIH_Lectures_Pdf_Poster_' . ucfirst($layout);

  foreach ($lecture->field_lectures['und'] as $key => $value) {
    $node = node_load($value['target_id']);
    if ($node) {
      $events[] = $node;
    }
  }

  $pdf = new $class($events, $image);
  $pdf->setBaseUrl($base_url);
  $pdf->setHeading($lecture->title);
  $pdf->setAuthor(variable_get('site_name', "Vejle Idrætshøjskole"));
  if ($logo = file_load(variable_get('vih_lectures_pdf_logo', ''))) {
    $pdf->setLogo(drupal_realpath($logo->uri));
  }
  $pdf->setSubTitle($lecture->field_subtitle['und'][0]['safe_value']);
  $pdf->setDescription($lecture->body['da'][0]['safe_value']);
  $file = drupal_realpath($lecture->field_picture['da'][0]['uri']);
  $pdf->render();
  drupal_exit();
}
